package axs

import (
	"fmt"
	"strings"

	"github.com/gocarina/gocsv"
)

var slackSteps = []string{
	"Open Slack",
	"Click <org name>â–¼",
	"Select 'Settings & Administration'",
	"Select 'Manage Members'",
	"Select 'Export Member List'",
	"Execute 'axsdump --slack-members-csv=<path>'",
}

type slackMemberRecord struct {
	Username string `csv:"username"`
	Email    string `csv:"email"`
	Status   string `csv:"status"`
	FullName string `csv:"fullname"`
}

// SlackMembers parses the CSV file generated by the Slack Members page.
func SlackMembers(path string) (*Artifact, error) {
	src, err := NewSource(path)
	if err != nil {
		return nil, fmt.Errorf("source: %w", err)
	}
	src.Kind = "slack_org_members"
	src.Name = "Slack Members"
	src.Process = slackSteps
	a := &Artifact{Metadata: src}

	records := []slackMemberRecord{}
	if err := gocsv.UnmarshalBytes(src.content, &records); err != nil {
		return nil, fmt.Errorf("unmarshal: %w", err)
	}

	for _, r := range records {
		if r.Status == "Deactivated" {
			continue
		}

		u := User{
			Account: r.Email,
			Name:    strings.TrimSpace(r.FullName),
		}

		if r.Status == "Bot" {
			a.Bots = append(a.Bots, u)
			continue
		}
		if r.Status != "Member" {
			u.Permissions = []string{r.Status}
		}
		a.Users = append(a.Users, u)
	}

	return a, nil
}
