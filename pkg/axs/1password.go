package axs

import (
	"fmt"
	"strings"

	"github.com/gocarina/gocsv"
)

var OnePasswordSteps = []string{
	"To be documented",
	"Download resulting CSV file for analysis",

	"Execute 'acls-in-yaml --1password-team-csv=<path>'",
}

type onePasswordTeamRecord struct {
	TeamMember string `csv:"Team Member"`
	Email      string `csv:"Email"`
	Status     string `csv:"Status"`
}

// OnePasswordTeam parses the CSV file generated by the OnePassword Team page.
func OnePasswordTeam(path string) (*Artifact, error) {
	src, err := NewSource(path)
	if err != nil {
		return nil, fmt.Errorf("source: %w", err)
	}
	src.Kind = "1password_team"
	src.Name = "1Password Team Members"
	src.Process = renderSteps(OnePasswordSteps, path)
	a := &Artifact{Metadata: src}

	records := []onePasswordTeamRecord{}
	if err := gocsv.UnmarshalBytes(src.content, &records); err != nil {
		return nil, fmt.Errorf("unmarshal: %w", err)
	}

	for _, r := range records {
		// Reduce output spam
		if r.Status == "Active" {
			r.Status = ""
		}

		u := User{
			Account: r.Email,
			Name:    strings.TrimSpace(r.TeamMember),
			Status:  r.Status,
		}

		a.Users = append(a.Users, u)
	}

	return a, nil
}
