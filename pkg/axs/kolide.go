package axs

import (
	"fmt"
	"strings"

	"github.com/gocarina/gocsv"
)

var KolideSteps = []string{
	"Open https://k2.kolide.com/3361/settings/admin/users",
	"Click CSV",
	"Download resulting CSV file for analysis",
	"Execute 'acls-in-yaml --kolide-users-csv=<path>'",
}

type kolideMemberRecord struct {
	Name        string `csv:"Name"`
	Email       string `csv:"Email"`
	Permissions string `csv:"Permissions"`
}

// KolideUsers parses the CSV file generated by the Kolide Users page.
func KolideUsers(path string) (*Artifact, error) {
	src, err := NewSource(path)
	if err != nil {
		return nil, fmt.Errorf("source: %w", err)
	}
	src.Kind = "kolide_users"
	src.Name = "Kolide Users"
	src.Process = renderSteps(KolideSteps, path)
	a := &Artifact{Metadata: src}

	records := []kolideMemberRecord{}
	if err := gocsv.UnmarshalBytes(src.content, &records); err != nil {
		return nil, fmt.Errorf("unmarshal: %w", err)
	}

	for _, r := range records {
		u := User{
			Account: r.Email,
			Name:    strings.TrimSpace(r.Name),
			Role:    r.Permissions,
		}

		a.Users = append(a.Users, u)
	}

	return a, nil
}
